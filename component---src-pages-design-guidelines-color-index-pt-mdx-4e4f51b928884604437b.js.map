{"version":3,"sources":["webpack:///./src/components/mdx/MDXPageLayout.tsx","webpack:///./src/pages/design-guidelines/color/index.pt.mdx","webpack:///./src/components/Pallete.tsx","webpack:///./src/components/PalleteList.tsx","webpack:///./src/components/TabLinks.tsx"],"names":["MDXPageLayout","children","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","items","title","href","parentName","isMDXComponent","Pallete","pallete","useStyles","createStyles","classes","css","keys","Object","map","k","parseInt","substr","sort","a","b","className","box","item","style","background","c40","color","gray","c100","shade","hex","key","c20","theme","display","width","fontSize","typography","sizes","text","fontWeight","justifyContent","padding","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","PalleteList","intl","useIntl","wrap","entries","colors","name","formatMessage","id","TabLinks","isActive","location","pathname","locale","tabs","component","LocaleLink","to","active","marginTop","marginBottom","boxShadow"],"mappings":"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","file":"component---src-pages-design-guidelines-color-index-pt-mdx-4e4f51b928884604437b.js","sourcesContent":["import React from 'react'\n\nimport { PageLayout } from '../PageLayout'\n\nexport function MDXPageLayout({ children }) {\n  return <PageLayout>{children}</PageLayout>\n}\n\nexport default MDXPageLayout\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/lj/workspace/bold/site/src/components/mdx/MDXPageLayout\";\nimport { PalleteList } from '../../../components/PalleteList';\nimport { TabLinks } from '../../../components/TabLinks';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"cores\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Cores`}</h1>\n    <TabLinks items={[{\n      title: 'Paleta',\n      href: '/design-guidelines/color'\n    }, {\n      title: 'Utilização',\n      href: '/design-guidelines/color/usage'\n    }]} mdxType=\"TabLinks\" />\n    <p>{`No Bold, as cores são usadas para expressar a interatividade dos componentes, situação e enfatizar conteúdo visual e textual. Todas as paletas foram construídas de acordo com padrões de acessibilidade, cumprindo o contraste mínimo de elementos interativos e texto com o plano de fundo. As paletas também foram projetadas de forma temática e mantêm o contraste ideal de todos os componentes, além de funcionar em sentido inverso, no modo `}<em parentName=\"p\">{`dark`}</em>{`.`}</p>\n    <PalleteList mdxType=\"PalleteList\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { Theme, useStyles } from 'bold-ui'\nimport { ColorScale, gray } from 'bold-ui/styles/colors'\nimport React from 'react'\n\nexport interface PalletePros {\n  title: string\n  pallete: ColorScale\n}\n\nexport function Pallete(props: PalletePros) {\n  const { title, pallete } = props\n  const { classes, css } = useStyles(createStyles)\n\n  const keys: number[] = Object.keys(pallete)\n    .map(k => parseInt(k.substr(1), 10))\n    .sort((a, b) => (a < b ? 1 : -1))\n\n  return (\n    <div className={classes.box}>\n      <div className={css(classes.item, classes.title)} style={{ background: pallete.c40, color: gray.c100 }}>\n        {title}\n      </div>\n      <div className={classes.item} style={{ background: pallete.c40, color: gray.c100 }}>\n        <span className={classes.shade}>40</span>\n        <span className={classes.hex}>{pallete.c40}</span>\n      </div>\n      {keys.map(key => (\n        <div\n          key={key}\n          className={classes.item}\n          style={{\n            background: (pallete as any)['c' + key],\n            color: key <= 60 ? gray.c100 : gray.c20,\n          }}\n        >\n          <span className={classes.shade}>{key}</span>\n          <span className={classes.hex}>{(pallete as any)['c' + key]}</span>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nconst createStyles = (theme: Theme) => ({\n  box: {\n    display: 'inline-block',\n    width: 240,\n    fontSize: theme.typography.sizes.text,\n  } as React.CSSProperties,\n  title: {\n    fontWeight: 'bold',\n  } as React.CSSProperties,\n  item: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '0.75rem 1rem',\n    '&:first-of-type': {\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n    },\n    '&:last-of-type': {\n      borderBottomLeftRadius: 4,\n      borderBottomRightRadius: 4,\n    },\n  } as React.CSSProperties,\n  shade: {\n    fontWeight: 'bold',\n  } as React.CSSProperties,\n  hex: {} as React.CSSProperties,\n})\n","import { Cell, Grid } from 'bold-ui'\nimport * as colors from 'bold-ui/styles/colors'\nimport { useIntl } from 'gatsby-plugin-intl'\nimport React from 'react'\n\nimport { Pallete } from './Pallete'\n\nexport const PalleteList = () => {\n  const intl = useIntl()\n  return (\n    <>\n      <Grid justifyContent='flex-start' wrap>\n        {Object.entries(colors).map(([name, pallete]) => (\n          <Cell key={name}>\n            <Pallete title={intl.formatMessage({ id: `color-name-${name}` })} pallete={pallete} />\n          </Cell>\n        ))}\n      </Grid>\n    </>\n  )\n}\n","import { TabItem, Tabs, Theme, useStyles } from 'bold-ui'\nimport { useIntl } from 'gatsby-plugin-intl'\nimport React, { CSSProperties } from 'react'\n\nimport { LocaleLink } from './LocaleLink'\n\nexport interface TabLinksProps {\n  items: Array<{\n    title: string\n    href: string\n  }>\n}\n\nexport const TabLinks = (props: TabLinksProps) => {\n  const { items } = props\n  const { classes } = useStyles(createStyles)\n\n  const intl = useIntl()\n  const isActive = (item: TabLinksProps['items'][0]) =>\n    typeof location !== 'undefined' &&\n    (location.pathname === item.href || location.pathname === `/${intl.locale}${item.href}`)\n\n  return (\n    <div className={classes.tabs}>\n      <Tabs>\n        {items.map(item => (\n          <TabItem key={item.href} component={LocaleLink} to={item.href} style={classes.item} active={isActive(item)}>\n            {item.title}\n          </TabItem>\n        ))}\n      </Tabs>\n    </div>\n  )\n}\n\nconst createStyles = (theme: Theme) => ({\n  tabs: {\n    marginTop: '-0.75rem !important',\n    marginBottom: '2rem',\n  } as CSSProperties,\n  item: {\n    'a:focus': {\n      boxShadow: 'none !important',\n    },\n  } as CSSProperties,\n})\n"],"sourceRoot":""}