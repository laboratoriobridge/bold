{"version":3,"sources":["webpack:///./src/components/mdx/MDXPageLayout.tsx","webpack:///./src/pages/components/toast/index.pt.mdx"],"names":["MDXPageLayout","children","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"8FAAA,qCAQeA,IAJR,YAAqC,IAAZC,EAAY,EAAZA,SAC9B,OAAO,kBAAC,IAAD,KAAaA,K,kLCCTC,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,QACN,MAAS,CACP,SAAY,aAHhB,SAMA,gCAAe,kBAAIC,WAAW,KAAf,UAAf,kTAAoW,kBAAIA,WAAW,KAAf,UAApW,gBACA,kBACE,GAAM,gBACN,MAAS,CACP,SAAY,aAHhB,iBAMA,sBACE,kBAAIA,WAAW,MAAf,wEACA,kBAAIA,WAAW,MAAf,mGAAwH,kBAAIA,WAAW,MAAf,UAAxH,OAAmK,kBAAIA,WAAW,MAAf,SAAnK,OAA6M,kBAAIA,WAAW,MAAf,SAA7M,6BACA,kBAAIA,WAAW,MAAf,8EACA,kBAAIA,WAAW,MAAf,0HAEF,qBAAG,sBAAQA,WAAW,KAAnB,6EAKPJ,EAAWK,gBAAiB","file":"component---src-pages-components-toast-index-pt-mdx-2dcc3804dadaf5a4490a.js","sourcesContent":["import React from 'react'\n\nimport { PageLayout } from '../PageLayout'\n\nexport function MDXPageLayout({ children }) {\n  return <PageLayout>{children}</PageLayout>\n}\n\nexport default MDXPageLayout\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/lj/workspace/bold/site/src/components/mdx/MDXPageLayout\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"toast\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Toast`}</h1>\n    <p>{`Utilize `}<em parentName=\"p\">{`toasts`}</em>{` para mostrar informações que requerem mínima interação do usuário. As mensagens desaparecem após 5 segundos ou podem ser fechadas manualmente e são apresentadas nos cantos inferiores da tela. As mensagens não podem atrapalhar o fluxo de trabalho do usuário. São comumente utilizadas para alertar sobre `}<em parentName=\"p\">{`status`}</em>{` de tarefas.`}</p>\n    <h2 {...{\n      \"id\": \"boas-praticas\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Boas práticas`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Mensagens devem limitar seu corpo de texto em no máximo duas linhas.`}</li>\n      <li parentName=\"ul\">{`Devem desaparecer automaticamente após 5 segundos, e devem ter um ícone de fechar. Se entrar no `}<em parentName=\"li\">{`status`}</em>{` de `}<em parentName=\"li\">{`hover`}</em>{`, a `}<em parentName=\"li\">{`toast`}</em>{` deve ser mantida aberta.`}</li>\n      <li parentName=\"ul\">{`Podem ser incluídos links que redirecionam o usuário para próximos passos.`}</li>\n      <li parentName=\"ul\">{`Utilize ícones para transmitir clareza adicional. Os ícones informativos devem ser posicionados à esquerda do título.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Este componente ainda não foi implementado como um componente em React.`}</strong></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}