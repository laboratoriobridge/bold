{"version":3,"sources":["webpack:///./src/components/mdx/MDXPageLayout.tsx","webpack:///./src/pages/design-guidelines/iconography/index.pt.mdx","webpack:///./src/components/TabLinks.tsx"],"names":["MDXPageLayout","children","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","items","title","href","parentName","isMDXComponent","TabLinks","classes","useStyles","createStyles","intl","useIntl","isActive","item","location","pathname","locale","className","tabs","map","key","component","LocaleLink","to","style","active","theme","marginTop","marginBottom","boxShadow"],"mappings":"8FAAA,qCAQeA,IAJR,YAAqC,IAAZC,EAAY,EAAZA,SAC9B,OAAO,kBAAC,IAAD,KAAaA,K,8LCETC,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,cACN,MAAS,CACP,SAAY,aAHhB,eAMA,YAAC,IAAD,CAAUC,MAAO,CAAC,CAChBC,MAAO,aACPC,KAAM,kCACL,CACDD,MAAO,aACPC,KAAM,2CACJH,QAAQ,aACZ,gPAEA,kBACE,GAAM,gBACN,MAAS,CACP,SAAY,aAHhB,iBAMA,2IACA,qBAAG,mBAAKI,WAAW,IACf,IAAO,wBACP,IAAO,iDAEX,kBACE,GAAM,iBACN,MAAS,CACP,SAAY,aAHhB,kBAMA,mhBAIA,qBAAG,mBAAKA,WAAW,IACf,IAAO,sBACP,IAAO,8BAEX,kBACE,GAAM,+BACN,MAAS,CACP,SAAY,aAHhB,gCAMA,wIACA,qBAAG,mBAAKA,WAAW,IACf,IAAO,yBACP,IAAO,iDAEX,kBACE,GAAM,sBACN,MAAS,CACP,SAAY,aAHhB,uBAMA,8JAEA,kBACE,GAAM,WACN,MAAS,CACP,SAAY,aAHhB,YAMA,qBAAG,mBAAKA,WAAW,IACf,IAAO,uBACP,IAAO,yBAMfP,EAAWQ,gBAAiB,G,kCCnG5B,+FAaaC,EAAW,SAACP,GAAyB,IACxCE,EAAUF,EAAVE,MACAM,EAAYC,aAAUC,GAAtBF,QAEFG,EAAOC,oBACPC,EAAW,SAACC,GAAD,MACK,oBAAbC,WACNA,SAASC,WAAaF,EAAKV,MAAQW,SAASC,WAAT,IAA0BL,EAAKM,OAASH,EAAKV,OAEnF,OACE,yBAAKc,UAAWV,EAAQW,MACtB,kBAAC,IAAD,KACGjB,EAAMkB,KAAI,SAAAN,GAAI,OACb,kBAAC,IAAD,CAASO,IAAKP,EAAKV,KAAMkB,UAAWC,IAAYC,GAAIV,EAAKV,KAAMqB,MAAOjB,EAAQM,KAAMY,OAAQb,EAASC,IAClGA,EAAKX,aAQZO,EAAe,SAACiB,GAAD,MAAmB,CACtCR,KAAM,CACJS,UAAW,sBACXC,aAAc,QAEhBf,KAAM,CACJ,UAAW,CACTgB,UAAW","file":"component---src-pages-design-guidelines-iconography-index-pt-mdx-7ce3f2586179a915afcf.js","sourcesContent":["import React from 'react'\n\nimport { PageLayout } from '../PageLayout'\n\nexport function MDXPageLayout({ children }) {\n  return <PageLayout>{children}</PageLayout>\n}\n\nexport default MDXPageLayout\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/lj/workspace/bold/site/src/components/mdx/MDXPageLayout\";\nimport { TabLinks } from '../../../components/TabLinks';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"iconografia\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Iconografia`}</h1>\n    <TabLinks items={[{\n      title: 'Utilização',\n      href: '/design-guidelines/iconography'\n    }, {\n      title: 'Biblioteca',\n      href: '/design-guidelines/iconography/library'\n    }]} mdxType=\"TabLinks\" />\n    <p>{`Os ícones representam objetos, ações e estados, e são usados ​​para comunicar uma mensagem. Cada ícone foi projetado para\nser simples, amigável e reduzido à sua forma mínima, expressando características essenciais.`}</p>\n    <h2 {...{\n      \"id\": \"grid-do-icone\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Grid do ícone`}</h2>\n    <p>{`O grid de ícones estabelece regras claras para o posicionamento consistente, mas flexível, dos elementos gráficos.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/image/icn-canvas.png\",\n        \"alt\": \"Tamanho da tela, preenchimento e área ativa\"\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"tamanho-e-peso\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Tamanho e peso`}</h2>\n    <p>{`Todos os ícones são construídos em um quadrado de 24px com 2px de preenchimento. Os ícones do sistema usam uma largura de traçado consistente de 2px,\nincluindo curvas e ângulos. Ao usar ícones, todos as áreas de clique precisam ter no mínimo 40 pixels. Ícones do mesmo\ntamanho devem ter o mesmo peso visual. Um ícone não deve parecer mais pesado ou mais claro que outro ícone do\nmesmo tamanho. Os glifos ou ícones de 16px devem sempre ser um ícone preenchido, isso garante que o ícone permaneça legível.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/image/icn-size.png\",\n        \"alt\": \"Tamanho do botão e glifo\"\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"formas-das-linhas-principais\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Formas das linhas principais`}</h2>\n    <p>{`Ao usar as formas principais baseadas no grid, é possível manter consistentes as proporções visuais nos ícones.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/image/icn-keyline.png\",\n        \"alt\": \"Tamanho da tela, preenchimento e área ativa\"\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"perfeicao-de-pixels\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Perfeição de pixels`}</h3>\n    <p>{`Para evitar distorcer um ícone, posicione os ícones “no pixel” transformando as coordenadas X e Y em números inteiros,\nsem decimais.`}</p>\n    <h3 {...{\n      \"id\": \"exemplos\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Exemplos`}</h3>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/image/icn-pixel.png\",\n        \"alt\": \"Exemplos de ícones\"\n      }}></img></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { TabItem, Tabs, Theme, useStyles } from 'bold-ui'\nimport { useIntl } from 'gatsby-plugin-intl'\nimport React, { CSSProperties } from 'react'\n\nimport { LocaleLink } from './LocaleLink'\n\nexport interface TabLinksProps {\n  items: Array<{\n    title: string\n    href: string\n  }>\n}\n\nexport const TabLinks = (props: TabLinksProps) => {\n  const { items } = props\n  const { classes } = useStyles(createStyles)\n\n  const intl = useIntl()\n  const isActive = (item: TabLinksProps['items'][0]) =>\n    typeof location !== 'undefined' &&\n    (location.pathname === item.href || location.pathname === `/${intl.locale}${item.href}`)\n\n  return (\n    <div className={classes.tabs}>\n      <Tabs>\n        {items.map(item => (\n          <TabItem key={item.href} component={LocaleLink} to={item.href} style={classes.item} active={isActive(item)}>\n            {item.title}\n          </TabItem>\n        ))}\n      </Tabs>\n    </div>\n  )\n}\n\nconst createStyles = (theme: Theme) => ({\n  tabs: {\n    marginTop: '-0.75rem !important',\n    marginBottom: '2rem',\n  } as CSSProperties,\n  item: {\n    'a:focus': {\n      boxShadow: 'none !important',\n    },\n  } as CSSProperties,\n})\n"],"sourceRoot":""}