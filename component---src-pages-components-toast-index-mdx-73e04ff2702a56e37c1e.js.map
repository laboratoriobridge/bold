{"version":3,"sources":["webpack:///./src/components/mdx/MDXPageLayout.tsx","webpack:///./src/pages/components/toast/index.mdx"],"names":["MDXPageLayout","children","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"8FAAA,qCAQeA,IAJR,YAAqC,IAAZC,EAAY,EAAZA,SAC9B,OAAO,kBAAC,IAAD,KAAaA,K,kLCCTC,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,QACN,MAAS,CACP,SAAY,aAHhB,SAMA,uUACA,kBACE,GAAM,iBACN,MAAS,CACP,SAAY,aAHhB,kBAMA,sBACE,kBAAIC,WAAW,MAAf,iFACA,kBAAIA,WAAW,MAAf,oCACA,kBAAIA,WAAW,MAAf,gIACA,kBAAIA,WAAW,MAAf,gEACA,kBAAIA,WAAW,MAAf,6DAEF,qBAAG,sBAAQA,WAAW,KAAnB,sEAKPJ,EAAWK,gBAAiB","file":"component---src-pages-components-toast-index-mdx-73e04ff2702a56e37c1e.js","sourcesContent":["import React from 'react'\n\nimport { PageLayout } from '../PageLayout'\n\nexport function MDXPageLayout({ children }) {\n  return <PageLayout>{children}</PageLayout>\n}\n\nexport default MDXPageLayout\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/lj/workspace/bold/site/src/components/mdx/MDXPageLayout\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"toast\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Toast`}</h1>\n    <p>{`Use toast to show information that requires minimal user interaction. Show these event-driven messages by overlaying the message at the bottom left of the screen, as if it was emerging from the navigation sidebar. Toasts can close automatically after 5 seconds, or they may require manual close action.`}</p>\n    <h2 {...{\n      \"id\": \"best-practices\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Best practices`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Try to keep the text of message concise: it can be up to two lines in length.`}</li>\n      <li parentName=\"ul\">{`Use dismiss icon to close flags.`}</li>\n      <li parentName=\"ul\">{`The flag must close after an action is taken, or after 5 seconds. If the flag receives hover status, it should be kept open.`}</li>\n      <li parentName=\"ul\">{`Use links that allow users to respond to the flag's content.`}</li>\n      <li parentName=\"ul\">{`Informative icons can be used to make the message clear.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`This component hasn't yet been implemented as a react component.`}</strong></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}