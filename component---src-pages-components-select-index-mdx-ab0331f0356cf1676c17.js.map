{"version":3,"sources":["webpack:///./src/pages/components/select/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","src","isMDXComponent"],"mappings":"wPAOaA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,SACN,MAAS,CACP,SAAY,aAHhB,UAMA,mQACA,kBACE,GAAM,iBACN,MAAS,CACP,SAAY,aAHhB,kBAMA,sBACE,kBAAIC,WAAW,MAAf,8EACA,kBAAIA,WAAW,MAAf,4EAAiG,iBAAGA,WAAW,KAC3G,KAAQ,4BADqF,gBAAjG,KAGA,kBAAIA,WAAW,MAAf,yFAEF,kBACE,GAAM,UACN,MAAS,CACP,SAAY,aAHhB,WAMA,YAAC,IAAD,CAAMC,IAAI,iCAAiCF,QAAQ,SACnD,kBACE,GAAM,aACN,MAAS,CACP,SAAY,aAHhB,cAMA,yFAAwE,oBAAMC,WAAW,IACrF,UAAa,iBADuD,iBAAxE,UAGA,6CAA4B,oBAAMA,WAAW,IACzC,UAAa,iBADW,eAA5B,+KAGA,YAAC,IAAD,CAAMC,IAAI,qCAAqCF,QAAQ,UAK3DH,EAAWM,gBAAiB","file":"component---src-pages-components-select-index-mdx-ab0331f0356cf1676c17.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/lj/workspace/bold/site/src/components/mdx/MDXPageLayout\";\nimport { Demo } from '../../../components/Demo';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"select\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Select`}</h1>\n    <p>{`Select is a type of input that is used in forms, where a user is submitting data and chooses one option from a list. When text is inserted on the input field, filter the options. Consider showing suggestions when the select is active.`}</p>\n    <h2 {...{\n      \"id\": \"best-practices\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Best practices`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Order the list by frequency of use, and if applicable, in ascending order.`}</li>\n      <li parentName=\"ul\">{`For situations where the user can select more than one option, use using `}<a parentName=\"li\" {...{\n          \"href\": \"/components/multi-select\"\n        }}>{`Multi Select`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Avoid using the select input of data that is known to the user, such as birth dates.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Example`}</h2>\n    <Demo src='pages/components/select/Select' mdxType=\"Demo\" />\n    <h2 {...{\n      \"id\": \"suggestion\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Suggestion`}</h2>\n    <p>{`Allow select value to be whatever the user types, by providing a `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`createNewItem`}</code>{` prop.`}</p>\n    <p>{`You can use the prop `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`openOnFocus`}</code>{` to control whether the suggestion menu should appear when input receives focus - default is false for suggestion selects (when createNewItem) and true for normal selects.`}</p>\n    <Demo src='pages/components/select/Suggestion' mdxType=\"Demo\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}