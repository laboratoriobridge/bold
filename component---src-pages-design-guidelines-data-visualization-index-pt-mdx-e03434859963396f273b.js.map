{"version":3,"sources":["webpack:///./src/components/mdx/MDXPageLayout.tsx","webpack:///./src/pages/design-guidelines/data-visualization/index.pt.mdx","webpack:///./src/components/TabLinks.tsx"],"names":["MDXPageLayout","children","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","items","title","href","isMDXComponent","TabLinks","classes","useStyles","createStyles","intl","useIntl","isActive","item","location","pathname","locale","className","tabs","map","key","component","LocaleLink","to","style","active","theme","marginTop","marginBottom","boxShadow"],"mappings":"8FAAA,qCAQeA,IAJR,YAAqC,IAAZC,EAAY,EAAZA,SAC9B,OAAO,kBAAC,IAAD,KAAaA,K,gMCETC,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,wBACN,MAAS,CACP,SAAY,aAHhB,yBAMA,kQACA,YAAC,IAAD,CAAUC,MAAO,CAAC,CAChBC,MAAO,UACPC,KAAM,gDACL,CACDD,MAAO,MACPC,KAAM,gDACJH,QAAQ,cAKhBH,EAAWO,gBAAiB,G,kCC5C5B,+FAaaC,EAAW,SAACN,GAAyB,IACxCE,EAAUF,EAAVE,MACAK,EAAYC,aAAUC,GAAtBF,QAEFG,EAAOC,oBACPC,EAAW,SAACC,GAAD,MACK,oBAAbC,WACNA,SAASC,WAAaF,EAAKT,MAAQU,SAASC,WAAT,IAA0BL,EAAKM,OAASH,EAAKT,OAEnF,OACE,yBAAKa,UAAWV,EAAQW,MACtB,kBAAC,IAAD,KACGhB,EAAMiB,KAAI,SAAAN,GAAI,OACb,kBAAC,IAAD,CAASO,IAAKP,EAAKT,KAAMiB,UAAWC,IAAYC,GAAIV,EAAKT,KAAMoB,MAAOjB,EAAQM,KAAMY,OAAQb,EAASC,IAClGA,EAAKV,aAQZM,EAAe,SAACiB,GAAD,MAAmB,CACtCR,KAAM,CACJS,UAAW,sBACXC,aAAc,QAEhBf,KAAM,CACJ,UAAW,CACTgB,UAAW","file":"component---src-pages-design-guidelines-data-visualization-index-pt-mdx-e03434859963396f273b.js","sourcesContent":["import React from 'react'\n\nimport { PageLayout } from '../PageLayout'\n\nexport function MDXPageLayout({ children }) {\n  return <PageLayout>{children}</PageLayout>\n}\n\nexport default MDXPageLayout\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/lj/workspace/bold/site/src/components/mdx/MDXPageLayout\";\nimport { TabLinks } from '../../../components/TabLinks';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"visualizacao-de-dados\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`visualização de dados`}</h1>\n    <p>{`A visualização de dados consiste em apresentar graficamente informações e dados para sintetizar informações complexas e compreender padrões e exceções apresentados nos dados. A visualização de dados não deve ser usada como decoração.`}</p>\n    <TabLinks items={[{\n      title: 'Modelos',\n      href: '/design-guidelines/data-visualization/models'\n    }, {\n      title: 'Uso',\n      href: '/design-guidelines/data-visualization/usage'\n    }]} mdxType=\"TabLinks\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { TabItem, Tabs, Theme, useStyles } from 'bold-ui'\nimport { useIntl } from 'gatsby-plugin-intl'\nimport React, { CSSProperties } from 'react'\n\nimport { LocaleLink } from './LocaleLink'\n\nexport interface TabLinksProps {\n  items: Array<{\n    title: string\n    href: string\n  }>\n}\n\nexport const TabLinks = (props: TabLinksProps) => {\n  const { items } = props\n  const { classes } = useStyles(createStyles)\n\n  const intl = useIntl()\n  const isActive = (item: TabLinksProps['items'][0]) =>\n    typeof location !== 'undefined' &&\n    (location.pathname === item.href || location.pathname === `/${intl.locale}${item.href}`)\n\n  return (\n    <div className={classes.tabs}>\n      <Tabs>\n        {items.map(item => (\n          <TabItem key={item.href} component={LocaleLink} to={item.href} style={classes.item} active={isActive(item)}>\n            {item.title}\n          </TabItem>\n        ))}\n      </Tabs>\n    </div>\n  )\n}\n\nconst createStyles = (theme: Theme) => ({\n  tabs: {\n    marginTop: '-0.75rem !important',\n    marginBottom: '2rem',\n  } as CSSProperties,\n  item: {\n    'a:focus': {\n      boxShadow: 'none !important',\n    },\n  } as CSSProperties,\n})\n"],"sourceRoot":""}