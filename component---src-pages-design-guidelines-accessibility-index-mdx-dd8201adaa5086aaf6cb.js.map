{"version":3,"sources":["webpack:///./src/components/mdx/MDXPageLayout.tsx","webpack:///./src/pages/design-guidelines/accessibility/index.mdx","webpack:///./src/components/Card.tsx"],"names":["MDXPageLayout","children","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","cite","icon","isMDXComponent","Card","classes","useStyles","createStyles","className","card","alignItems","hSpacing","fill","size","component","fontSize","color","theme","pallete","gray","c10","backgroundColor","primary","c90","borderRadius","maxWidth","margin","padding","border","c40"],"mappings":"8FAAA,qCAQeA,IAJR,YAAqC,IAAZC,EAAY,EAAZA,SAC9B,OAAO,kBAAC,IAAD,KAAaA,K,gMCETC,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,gBACN,MAAS,CACP,SAAY,aAHhB,iBAMA,uQAE+B,sBAAQC,WAAW,KAAnB,4CAF/B,kGAIA,0BAAYC,KAAK,6BACnB,mOAKE,kBACE,GAAM,oBACN,MAAS,CACP,SAAY,aAHhB,sBAMA,mDAAkC,iBAAGD,WAAW,IAC5C,KAAQ,iEADsB,gCAAlC,IAE8C,sBAAQA,WAAW,KAAnB,kEAF9C,4LAE6U,iBAAGA,WAAW,IACvV,KAAQ,wDADiU,UAF7U,kCAIsD,sBAAQA,WAAW,KAAnB,uBAJtD,kEAKA,YAAC,IAAD,CAAME,KAAK,eAAeH,QAAQ,QAAlC,6PAKA,kBACE,GAAM,wBACN,MAAS,CACP,SAAY,aAHhB,yBAMA,whBAKF,iBAAGC,WAAW,IACR,KAAQ,6CADd,mCALE,KAQA,kBACE,GAAM,iBACN,MAAS,CACP,SAAY,aAHhB,kBAMA,kBACE,GAAM,QACN,MAAS,CACP,SAAY,aAHhB,SAMA,sBACE,kBAAIA,WAAW,MAAf,gKAEA,kBAAIA,WAAW,MAAf,iHACA,kBAAIA,WAAW,MAAf,UAA+B,iBAAGA,WAAW,KACzC,KAAQ,4BADmB,SAA/B,wGAKF,qBAAG,mBAAKA,WAAW,IACf,IAAO,iCACP,IAAO,mGAEX,kBACE,GAAM,WACN,MAAS,CACP,SAAY,aAHhB,YAMA,qJACA,sBACE,kBAAIA,WAAW,MAAf,+EACA,kBAAIA,WAAW,MAAf,gFACA,kBAAIA,WAAW,MAAf,gFAEF,qBAAG,mBAAKA,WAAW,IACf,IAAO,oCACP,IAAO,iDAEX,kBACE,GAAM,QACN,MAAS,CACP,SAAY,aAHhB,SAMA,gUAE0D,sBAAQA,WAAW,KAAnB,OAF1D,gBAGA,6FACA,qBAAG,mBAAKA,WAAW,IACf,IAAO,iCACP,IAAO,kCAEX,kBACE,GAAM,yBACN,MAAS,CACP,SAAY,aAHhB,0BAMA,gVAGA,wEAAuD,sBAAQA,WAAW,KAAnB,OAAvD,mBACA,qBAAG,mBAAKA,WAAW,IACf,IAAO,yCACP,IAAO,gCAMfJ,EAAWO,gBAAiB,G,kCCjJ5B,uEAOO,SAASC,EAAKN,GAAkB,IAC7BI,EAAmBJ,EAAnBI,KAAMX,EAAaO,EAAbP,SACNc,EAAYC,aAAUC,GAAtBF,QAER,OACE,yBAAKG,UAAWH,EAAQI,MACtB,kBAAC,IAAD,CAAOC,WAAW,SAASC,SAAU,KACnC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMT,KAAMA,EAAMU,KAAK,UAAUC,KAAM,KAEzC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,UAAU,IAAIC,SAAU,KAAMC,MAAM,WACvCzB,MAQb,IAAMgB,EAAe,SAACU,GAAD,MAAmB,CACtCR,KAAM,CACJO,MAAOC,EAAMC,QAAQC,KAAKC,IAC1BC,gBAAiBJ,EAAMC,QAAQI,QAAQC,IACvCC,aAAc,EACdC,SAAU,QACVC,OAAQ,SACRC,QAAS,UACTC,OAAQ,aAAaX,EAAMC,QAAQI,QAAQO","file":"component---src-pages-design-guidelines-accessibility-index-mdx-dd8201adaa5086aaf6cb.js","sourcesContent":["import React from 'react'\n\nimport { PageLayout } from '../PageLayout'\n\nexport function MDXPageLayout({ children }) {\n  return <PageLayout>{children}</PageLayout>\n}\n\nexport default MDXPageLayout\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/lj/workspace/bold/site/src/components/mdx/MDXPageLayout\";\nimport { Card } from '../../../components/Card';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"accessibility\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Accessibility`}</h1>\n    <p>{`Web accessibility is gaining more and more space in the context of software development. Given the\ncollaborative nature of the web and its importance in the process of facilitating communication, we must\nensure access to information and `}<strong parentName=\"p\">{`provide the same experience to all users`}</strong>{`, regardless of their physical\nand cognitive abilities or the platform and technologies used.`}</p>\n    <blockquote cite='World Health Organization'>\n  <p>\n    Disability is not just a health problem. It is a complex phenomenon, reflecting the interaction between the\n    characteristics of a person's body and the characteristics of the society in which they live.\n  </p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"not-convinced-yet\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Not convinced yet?`}</h2>\n    <p>{`According to data from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.who.int/disabilities/world_report/2011/report.pdf\"\n      }}>{`World Disability Report 2011`}</a>{` `}<strong parentName=\"p\">{`one billion people worldwide live with some form of disability`}</strong>{` (representing 10% of the world population). In the Brazilian scenario, access to information is a right of every citizen guaranteed by the Federal Constitution. Besides that, the last `}<a parentName=\"p\" {...{\n        \"href\": \"https://censo2010.ibge.gov.br/resultados/resumo.html\"\n      }}>{`Census`}</a>{` presents data indicating that `}<strong parentName=\"p\">{`45.6 million people`}</strong>{` (23.9% of the total population) have some kind of disability.`}</p>\n    <Card icon='heartOutline' mdxType=\"Card\">\n  Our goal is to build inclusive digital products to enhance the experience of all users. Accessibility means making\n  people independent and ensuring they can complete their tasks in a similar effort and time as someone that does not\n  have a disability.\n    </Card>\n    <h2 {...{\n      \"id\": \"accessible-components\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Accessible components`}</h2>\n    <p>{`Bold components were built following the specifications of WCAG, conforming to AA level. Bold design\nsystem enables accessible development by providing semantically correct components, each with an\nappropriate ARIA markup so that they can be correctly identified by assistive technologies. However, it is\nimportant to keep in mind that the design system is only the foundation for the development of affordable\napplications. We recommend that you review and test your applications to ensure they conform to\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/WCAG20/#conformance\"\n      }}>{`WCAG standards at the AA level.`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"best-practices\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Best practices`}</h2>\n    <h3 {...{\n      \"id\": \"color\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Color`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Color should not be used as the only visual means of conveying information, indicating an action, prompting a\nresponse, or distinguishing a visual element.`}</li>\n      <li parentName=\"ul\">{`Limit the use of reds and greens, because it is easily confused with the more common type of color blindness.`}</li>\n      <li parentName=\"ul\">{`Plugin `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.getstark.co/\"\n        }}>{`Stark`}</a>{` for Sketch, make possible to see how the mock-ups are seen by different\ntypes of color blindness.`}</li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/image/accessibility-color.png\",\n        \"alt\": \"Do/Don`t: Do: Use icons to indicate error states. Don`t: Use only color to convey information\"\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"contrast\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Contrast`}</h2>\n    <p>{`In general, text and images must meet an optimal 4.5: 1 minimum contrast (for fonts equal to or less than 14pt), except for:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Large texts (18.6px or 14pt) should maintain the contrast of at least 3: 1.`}</li>\n      <li parentName=\"ul\">{`Decorative text /image and disabled states don’t have contrast requirements.`}</li>\n      <li parentName=\"ul\">{`Logo or text that makes up a mark need not be within the ratio of contrast.`}</li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/image/accessibility-contrast.png\",\n        \"alt\": \"Do/Don't: Contrast test on tags and buttons\"\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"focus\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Focus`}</h3>\n    <p>{`The component focused by the keyboard must be clearly marked, and the selection area must be clickable. By default,\nlinks and form elements already display the highlighted border when they receive focus from the keyboard. This border\ncan be modified via CSS to enhance highlighting, but should `}<strong parentName=\"p\">{`not`}</strong>{` be removed.`}</p>\n    <p>{`We use and recommend that the minimum edge thickness should be 2 px.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/image/accessibility-focus.png\",\n        \"alt\": \"Focus on button and checkbox\"\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"assistive-technologies\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Assistive technologies`}</h2>\n    <p>{`When people start to develop with accessibility in mind, it’s a common error add focus to every element on the page,\nincluding text and titles. This difficult the navigation of users who can see and can hinder who depends on a screen reader,\nbecause these technologies already provide focus to these elements.`}</p>\n    <p>{`Titles, text blocks, and disabled fields should `}<strong parentName=\"p\">{`not`}</strong>{` receive focus.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/image/accessibility-assistivetech.png\",\n        \"alt\": \"Disabled field and button\"\n      }}></img></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { Cell, HFlow, Icon, Icons, Text, Theme, useStyles } from 'bold-ui'\nimport React from 'react'\nexport interface CardProps {\n  icon: Icons\n  children: React.ReactNode\n}\n\nexport function Card(props: CardProps) {\n  const { icon, children } = props\n  const { classes } = useStyles(createStyles)\n\n  return (\n    <div className={classes.card}>\n      <HFlow alignItems='center' hSpacing={0.25}>\n        <Cell>\n          <Icon icon={icon} fill='primary' size={3} />\n        </Cell>\n        <Cell>\n          <Text component='p' fontSize={1.15} color='primary'>\n            {children}\n          </Text>\n        </Cell>\n      </HFlow>\n    </div>\n  )\n}\n\nconst createStyles = (theme: Theme) => ({\n  card: {\n    color: theme.pallete.gray.c10,\n    backgroundColor: theme.pallete.primary.c90,\n    borderRadius: 4,\n    maxWidth: '850px',\n    margin: '1rem 0',\n    padding: '0.75rem',\n    border: `1px solid ${theme.pallete.primary.c40}`,\n  } as React.CSSProperties,\n})\n"],"sourceRoot":""}