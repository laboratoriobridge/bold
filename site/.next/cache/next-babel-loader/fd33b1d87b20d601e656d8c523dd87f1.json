{
  "ast": null,
  "code": "import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/carolinekrone/Documents/GitHub/bold/site/components/Image.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { darkTheme, useStyles } from '../../lib';\nexport function Image(props) {\n  const {\n    theme,\n    classes\n  } = useStyles(() => ({\n    image: {\n      maxWidth: '100%'\n    }\n  }));\n  const {\n    0: currentSource,\n    1: setCurrentSource\n  } = useState(props.src);\n  useEffect(() => {\n    const [, path, filename] = /(.*)\\/(.*\\..*)$/.exec(props.src || '');\n    const darkSource = `${path}/dark-${filename}`;\n    setCurrentSource(theme === darkTheme ? darkSource : props.src);\n  }, [theme, props]);\n\n  const handleError = () => {\n    setCurrentSource(props.src);\n  };\n\n  return __jsx(\"img\", _extends({}, props, {\n    src: currentSource,\n    onError: handleError,\n    className: classes.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n}",
  "map": {
    "version": 3,
    "sources": ["/Users/carolinekrone/Documents/GitHub/bold/site/components/Image.tsx"],
    "names": [
      "useEffect",
      "useState",
      "darkTheme",
      "useStyles",
      "Image",
      "props",
      "theme",
      "classes",
      "image",
      "maxWidth",
      "currentSource",
      "setCurrentSource",
      "src",
      "path",
      "filename",
      "exec",
      "darkSource",
      "handleError"
    ],
    "mappings": ";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,WAArC;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAiE;AACtE,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBJ,SAAS,CAAC,OAAO;AAC1CK,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL;AADmC,GAAP,CAAD,CAApC;AAMA,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCV,QAAQ,CAACI,KAAK,CAACO,GAAP,CAAlD;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM,GAAGa,IAAH,EAASC,QAAT,IAAqB,kBAAkBC,IAAlB,CAAuBV,KAAK,CAACO,GAAN,IAAa,EAApC,CAA3B;AACA,UAAMI,UAAU,GAAI,GAAEH,IAAK,SAAQC,QAAS,EAA5C;AACAH,IAAAA,gBAAgB,CAACL,KAAK,KAAKJ,SAAV,GAAsBc,UAAtB,GAAmCX,KAAK,CAACO,GAA1C,CAAhB;AACD,GAJQ,EAIN,CAACN,KAAD,EAAQD,KAAR,CAJM,CAAT;;AAMA,QAAMY,WAAW,GAAG,MAAM;AACxBN,IAAAA,gBAAgB,CAACN,KAAK,CAACO,GAAP,CAAhB;AACD,GAFD;;AAIA,SAAO,0BAASP,KAAT;AAAgB,IAAA,GAAG,EAAEK,aAArB;AAAoC,IAAA,OAAO,EAAEO,WAA7C;AAA0D,IAAA,SAAS,EAAEV,OAAO,CAACC,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD",
    "sourcesContent": [
      "import { useEffect, useState } from 'react'\n\nimport { darkTheme, useStyles } from '../../lib'\n\nexport function Image(props: React.ImgHTMLAttributes<HTMLImageElement>) {\n  const { theme, classes } = useStyles(() => ({\n    image: {\n      maxWidth: '100%',\n    },\n  }))\n\n  const [currentSource, setCurrentSource] = useState(props.src)\n  useEffect(() => {\n    const [, path, filename] = /(.*)\\/(.*\\..*)$/.exec(props.src || '')\n    const darkSource = `${path}/dark-${filename}`\n    setCurrentSource(theme === darkTheme ? darkSource : props.src)\n  }, [theme, props])\n\n  const handleError = () => {\n    setCurrentSource(props.src)\n  }\n\n  return <img {...props} src={currentSource} onError={handleError} className={classes.image} />\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
