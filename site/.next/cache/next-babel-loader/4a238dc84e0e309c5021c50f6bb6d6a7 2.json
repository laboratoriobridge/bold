{
  "ast": null,
  "code": "import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/carolinekrone/Documents/GitHub/bold/site/components/SideNav/SideNav.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport { useStyles } from '../../../lib';\nimport { useClickOutside } from '../../../lib/hooks/useClickOutside';\nimport { APP_HEADER_HEIGHT } from '../AppHeader';\nimport { SideNavItem } from './SideNavItem';\nexport function SideNav(props) {\n  const {\n    pages,\n    onChangeOpen\n  } = props;\n  const {\n    classes\n  } = useStyles(createStyles, props);\n  const wrapperRef = useRef(null);\n  useClickOutside(wrapperRef, () => onChangeOpen(false));\n\n  const handleNavigate = () => onChangeOpen(false);\n\n  return __jsx(\"div\", {\n    ref: wrapperRef,\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"nav\", {\n    className: classes.nav,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: classes.ul,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, pages.map(link => __jsx(SideNavItem, _extends({\n    key: link.href,\n    onNavigate: handleNavigate\n  }, link, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))))));\n}\nexport const SIDE_NAV_WIDTH = 288;\n\nconst createStyles = (theme, {\n  open\n}) => ({\n  wrapper: {\n    width: SIDE_NAV_WIDTH,\n    flexShrink: 0,\n    transition: 'all .2s ease',\n    [theme.breakpoints.down('md')]: {\n      position: 'fixed',\n      zIndex: 10,\n      left: open ? 0 : -SIDE_NAV_WIDTH\n    }\n  },\n  nav: {\n    background: theme.pallete.surface.main,\n    width: SIDE_NAV_WIDTH,\n    borderRight: `1px solid ${theme.pallete.divider}`,\n    boxShadow: theme.shadows.outer[40],\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '2rem 0',\n    marginTop: APP_HEADER_HEIGHT,\n    position: 'fixed',\n    zIndex: 10,\n    overflow: 'auto',\n    height: `calc(100vh - ${APP_HEADER_HEIGHT}px)`,\n    svg: {\n      fill: 'currentColor'\n    }\n  },\n  ul: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0\n  }\n});",
  "map": {
    "version": 3,
    "sources": ["/Users/carolinekrone/Documents/GitHub/bold/site/components/SideNav/SideNav.tsx"],
    "names": [
      "React",
      "useRef",
      "useStyles",
      "useClickOutside",
      "APP_HEADER_HEIGHT",
      "SideNavItem",
      "SideNav",
      "props",
      "pages",
      "onChangeOpen",
      "classes",
      "createStyles",
      "wrapperRef",
      "handleNavigate",
      "wrapper",
      "nav",
      "ul",
      "map",
      "link",
      "href",
      "SIDE_NAV_WIDTH",
      "theme",
      "open",
      "width",
      "flexShrink",
      "transition",
      "breakpoints",
      "down",
      "position",
      "zIndex",
      "left",
      "background",
      "pallete",
      "surface",
      "main",
      "borderRight",
      "divider",
      "boxShadow",
      "shadows",
      "outer",
      "display",
      "flexDirection",
      "padding",
      "marginTop",
      "overflow",
      "height",
      "svg",
      "fill",
      "listStyle",
      "margin"
    ],
    "mappings": ";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAEA,SAA6BC,SAA7B,QAA8C,cAA9C;AACA,SAASC,eAAT,QAAgC,oCAAhC;AACA,SAASC,iBAAT,QAAkC,cAAlC;AAEA,SAASC,WAAT,QAA4B,eAA5B;AAeA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAsC;AAC3C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA0BF,KAAhC;AAEA,QAAM;AAAEG,IAAAA;AAAF,MAAcR,SAAS,CAACS,YAAD,EAAeJ,KAAf,CAA7B;AAEA,QAAMK,UAAU,GAAGX,MAAM,CAAiB,IAAjB,CAAzB;AACAE,EAAAA,eAAe,CAACS,UAAD,EAAa,MAAMH,YAAY,CAAC,KAAD,CAA/B,CAAf;;AACA,QAAMI,cAAc,GAAG,MAAMJ,YAAY,CAAC,KAAD,CAAzC;;AAEA,SACE;AAAK,IAAA,GAAG,EAAEG,UAAV;AAAsB,IAAA,SAAS,EAAEF,OAAO,CAACI,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACK,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEL,OAAO,CAACM,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACS,GAAN,CAAUC,IAAI,IACb,MAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,IAAI,CAACC,IAAvB;AAA6B,IAAA,UAAU,EAAEN;AAAzC,KAA6DK,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADH,CADF,CADF,CADF;AAWD;AAED,OAAO,MAAME,cAAc,GAAG,GAAvB;;AAEP,MAAMT,YAAY,GAAG,CAACU,KAAD,EAAe;AAAEC,EAAAA;AAAF,CAAf,MAA2C;AAC9DR,EAAAA,OAAO,EAAE;AACPS,IAAAA,KAAK,EAAEH,cADA;AAEPI,IAAAA,UAAU,EAAE,CAFL;AAGPC,IAAAA,UAAU,EAAE,cAHL;AAKP,KAACJ,KAAK,CAACK,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BC,MAAAA,QAAQ,EAAE,OADoB;AAE9BC,MAAAA,MAAM,EAAE,EAFsB;AAG9BC,MAAAA,IAAI,EAAER,IAAI,GAAG,CAAH,GAAO,CAACF;AAHY;AALzB,GADqD;AAY9DL,EAAAA,GAAG,EAAE;AACHgB,IAAAA,UAAU,EAAEV,KAAK,CAACW,OAAN,CAAcC,OAAd,CAAsBC,IAD/B;AAEHX,IAAAA,KAAK,EAAEH,cAFJ;AAGHe,IAAAA,WAAW,EAAG,aAAYd,KAAK,CAACW,OAAN,CAAcI,OAAQ,EAH7C;AAIHC,IAAAA,SAAS,EAAEhB,KAAK,CAACiB,OAAN,CAAcC,KAAd,CAAoB,EAApB,CAJR;AAKHC,IAAAA,OAAO,EAAE,MALN;AAMHC,IAAAA,aAAa,EAAE,QANZ;AAOHC,IAAAA,OAAO,EAAE,QAPN;AAQHC,IAAAA,SAAS,EAAEvC,iBARR;AASHwB,IAAAA,QAAQ,EAAE,OATP;AAUHC,IAAAA,MAAM,EAAE,EAVL;AAWHe,IAAAA,QAAQ,EAAE,MAXP;AAYHC,IAAAA,MAAM,EAAG,gBAAezC,iBAAkB,KAZvC;AAaH0C,IAAAA,GAAG,EAAE;AACHC,MAAAA,IAAI,EAAE;AADH;AAbF,GAZyD;AA6B9D/B,EAAAA,EAAE,EAAE;AACFgC,IAAAA,SAAS,EAAE,MADT;AAEFC,IAAAA,MAAM,EAAE,CAFN;AAGFP,IAAAA,OAAO,EAAE;AAHP;AA7B0D,CAA3C,CAArB",
    "sourcesContent": [
      "import React, { useRef } from 'react'\n\nimport { Icons, Omit, Theme, useStyles } from '../../../lib'\nimport { useClickOutside } from '../../../lib/hooks/useClickOutside'\nimport { APP_HEADER_HEIGHT } from '../AppHeader'\n\nimport { SideNavItem } from './SideNavItem'\n\nexport interface PageLink {\n  href?: string\n  title: React.ReactNode\n  icon: Icons | string\n  children?: Array<Omit<PageLink, 'icon' | 'children'>>\n}\n\nexport interface SideNavProps {\n  pages: PageLink[]\n  open: boolean\n  onChangeOpen(open: boolean): void\n}\n\nexport function SideNav(props: SideNavProps) {\n  const { pages, onChangeOpen } = props\n\n  const { classes } = useStyles(createStyles, props)\n\n  const wrapperRef = useRef<HTMLDivElement>(null)\n  useClickOutside(wrapperRef, () => onChangeOpen(false))\n  const handleNavigate = () => onChangeOpen(false)\n\n  return (\n    <div ref={wrapperRef} className={classes.wrapper}>\n      <nav className={classes.nav}>\n        <ul className={classes.ul}>\n          {pages.map(link => (\n            <SideNavItem key={link.href} onNavigate={handleNavigate} {...link} />\n          ))}\n        </ul>\n      </nav>\n    </div>\n  )\n}\n\nexport const SIDE_NAV_WIDTH = 288\n\nconst createStyles = (theme: Theme, { open }: SideNavProps) => ({\n  wrapper: {\n    width: SIDE_NAV_WIDTH,\n    flexShrink: 0,\n    transition: 'all .2s ease',\n\n    [theme.breakpoints.down('md')]: {\n      position: 'fixed',\n      zIndex: 10,\n      left: open ? 0 : -SIDE_NAV_WIDTH,\n    },\n  } as React.CSSProperties,\n  nav: {\n    background: theme.pallete.surface.main,\n    width: SIDE_NAV_WIDTH,\n    borderRight: `1px solid ${theme.pallete.divider}`,\n    boxShadow: theme.shadows.outer[40],\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '2rem 0',\n    marginTop: APP_HEADER_HEIGHT,\n    position: 'fixed',\n    zIndex: 10,\n    overflow: 'auto',\n    height: `calc(100vh - ${APP_HEADER_HEIGHT}px)`,\n    svg: {\n      fill: 'currentColor',\n    },\n  } as React.CSSProperties,\n  ul: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n  } as React.CSSProperties,\n})\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
