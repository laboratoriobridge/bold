{
  "ast": null,
  "code": "\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction rewriteUrlForNextExport(url) {\n  const [pathname, hash] = url.split('#'); // tslint:disable-next-line\n\n  let [path, qs] = pathname.split('?');\n  path = path.replace(/\\/$/, ''); // Append a trailing slash if this path does not have an extension\n\n  if (!/\\.[^/]+\\/?$/.test(path)) path += `/`;\n  if (qs) path += '?' + qs;\n  if (hash) path += '#' + hash;\n  return path;\n}\n\nexports.rewriteUrlForNextExport = rewriteUrlForNextExport;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/carolinekrone/Documents/GitHub/bold/node_modules/next/dist/next-server/lib/router/rewrite-url-for-export.js"
    ],
    "names": [
      "exports",
      "value",
      "rewriteUrlForNextExport",
      "url",
      "pathname",
      "hash",
      "split",
      "path",
      "qs",
      "replace",
      "test"
    ],
    "mappings": "AAAA;;;;AACA,uBAAsBA,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,SAASC,uBAAT,CAAiCC,GAAjC,EAAsC;AAClC,QAAM,CAACC,QAAD,EAAWC,IAAX,IAAmBF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAzB,CADkC,CAElC;;AACA,MAAI,CAACC,IAAD,EAAOC,EAAP,IAAaJ,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAjB;AACAC,EAAAA,IAAI,GAAGA,IAAI,CAACE,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAP,CAJkC,CAKlC;;AACA,MAAI,CAAC,cAAcC,IAAd,CAAmBH,IAAnB,CAAL,EACIA,IAAI,IAAK,GAAT;AACJ,MAAIC,EAAJ,EACID,IAAI,IAAI,MAAMC,EAAd;AACJ,MAAIH,IAAJ,EACIE,IAAI,IAAI,MAAMF,IAAd;AACJ,SAAOE,IAAP;AACH;;AACDP,OAAO,CAACE,uBAAR,GAAkCA,uBAAlC",
    "sourcesContent": [
      "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction rewriteUrlForNextExport(url) {\n    const [pathname, hash] = url.split('#');\n    // tslint:disable-next-line\n    let [path, qs] = pathname.split('?');\n    path = path.replace(/\\/$/, '');\n    // Append a trailing slash if this path does not have an extension\n    if (!/\\.[^/]+\\/?$/.test(path))\n        path += `/`;\n    if (qs)\n        path += '?' + qs;\n    if (hash)\n        path += '#' + hash;\n    return path;\n}\nexports.rewriteUrlForNextExport = rewriteUrlForNextExport;\n"
    ]
  },
  "metadata": {},
  "sourceType": "script"
}
