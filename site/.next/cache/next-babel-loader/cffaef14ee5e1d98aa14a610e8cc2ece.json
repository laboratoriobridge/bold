{
  "ast": null,
  "code": "import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/carolinekrone/Documents/GitHub/bold/site/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { keyframes } from '@emotion/core';\nimport { Button, Cell, Grid, HFlow, Icon, Text, useStyles, VFlow } from '../../lib';\nexport default (() => {\n  const {\n    classes\n  } = useStyles(createStyles);\n\n  const renderButtonGettingStarted = props => __jsx(\"a\", _extends({}, props, {\n    href: \"/getting-started\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n\n  return __jsx(\"div\", {\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(AnimatedTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"bold\"), \" \", __jsx(\"span\", {\n    style: {\n      display: 'inline-block'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"design system\")), __jsx(\"hr\", {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), __jsx(VFlow, {\n    vSpacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(VFlow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: classes.subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Welcome to bold, bridge\\u2019s open source design system\"), __jsx(Button, {\n    render: renderButtonGettingStarted,\n    kind: \"primary\",\n    skin: \"outline\",\n    size: \"medium\",\n    style: {\n      textDecoration: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(Icon, {\n    icon: \"rocket\",\n    style: {\n      marginRight: '0.5rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), \"Getting started\")), __jsx(Grid, {\n    wrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Cell, {\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(HFlow, {\n    alignItems: \"center\",\n    hSpacing: 0.5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(Icon, {\n    icon: \"arrowRight\",\n    fill: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    className: classes.infoTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Accessible\")), __jsx(Text, {\n    component: \"p\",\n    style: classes.info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Bold components were built following the specifications of WCAG AA level, so you can build inclusive digital products to enhance user experience.\")), __jsx(Cell, {\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(HFlow, {\n    alignItems: \"center\",\n    hSpacing: 0.5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(Icon, {\n    icon: \"arrowRight\",\n    fill: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    className: classes.infoTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Open source\")), __jsx(Text, {\n    component: \"p\",\n    style: classes.info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Bold is an open source project, so feel free to contribute, open issues if you find any bugs or implement new features. Find more information on GitHub.\")), __jsx(Cell, {\n    xs: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(HFlow, {\n    alignItems: \"center\",\n    hSpacing: 0.5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(Icon, {\n    icon: \"arrowRight\",\n    fill: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(\"h3\", {\n    className: classes.infoTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Customizable\")), __jsx(Text, {\n    component: \"p\",\n    style: classes.info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"By default, Bold exports light and dark themes, but you can create a custom theme and use any primary palette that fits your project.\"))))));\n});\n\nfunction AnimatedTitle(props) {\n  const shine = keyframes({\n    to: {\n      backgroundPosition: '200% center'\n    }\n  });\n  const {\n    classes\n  } = useStyles(createStyles, shine);\n  return __jsx(Text, _extends({\n    style: classes.animatedTitle\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }));\n}\n\nconst createStyles = (theme, shine = '') => ({\n  wrapper: {\n    background: theme.pallete.surface.main,\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  container: {\n    padding: '48px 80px',\n    maxWidth: 1056,\n    [theme.breakpoints.down('sm')]: {\n      padding: 40\n    }\n  },\n  title: {\n    fontWeight: 'normal',\n    fontSize: 56,\n    lineHeight: '108px',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: 40,\n      lineHeight: '72px'\n    }\n  },\n  subtitle: {\n    fontSize: 24\n  },\n  animatedTitle: {\n    fontSize: 132,\n    lineHeight: 1,\n    fontWeight: 'bold',\n    background: 'linear-gradient(80deg, #007AF0 20%, #00B5FF 40%, #00D2F4 60%, #007AF0 80%)',\n    backgroundClip: 'text',\n    textFillColor: 'transparent',\n    WebkitTextFillColor: 'transparent',\n    WebkitBackgroundClip: 'text',\n    backgroundSize: '200% auto',\n    animation: `${shine} 2s linear infinite`\n  },\n  divider: {\n    width: 100,\n    marginBottom: '4rem',\n    marginTop: '2rem'\n  },\n  info: {\n    marginLeft: 32,\n    marginTop: 8,\n    fontSize: '1rem'\n  },\n  infoTitle: {\n    fontSize: '1.5rem'\n  }\n});",
  "map": {
    "version": 3,
    "sources": ["/Users/carolinekrone/Documents/GitHub/bold/site/pages/index.tsx"],
    "names": [
      "keyframes",
      "Button",
      "Cell",
      "Grid",
      "HFlow",
      "Icon",
      "Text",
      "useStyles",
      "VFlow",
      "classes",
      "createStyles",
      "renderButtonGettingStarted",
      "props",
      "wrapper",
      "container",
      "title",
      "display",
      "divider",
      "subtitle",
      "textDecoration",
      "marginRight",
      "infoTitle",
      "info",
      "AnimatedTitle",
      "shine",
      "to",
      "backgroundPosition",
      "animatedTitle",
      "theme",
      "background",
      "pallete",
      "surface",
      "main",
      "flex",
      "flexDirection",
      "padding",
      "maxWidth",
      "breakpoints",
      "down",
      "fontWeight",
      "fontSize",
      "lineHeight",
      "backgroundClip",
      "textFillColor",
      "WebkitTextFillColor",
      "WebkitBackgroundClip",
      "backgroundSize",
      "animation",
      "width",
      "marginBottom",
      "marginTop",
      "marginLeft"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import { keyframes } from '@emotion/core'\n\nimport { Button, Cell, Grid, HFlow, Icon, Text, TextProps, Theme, useStyles, VFlow } from '../../lib'\n\nexport default () => {\n  const { classes } = useStyles(createStyles)\n  const renderButtonGettingStarted = (props: any) => <a {...props} href='/getting-started' />\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.container}>\n        <h1 className={classes.title}>\n          <AnimatedTitle>bold</AnimatedTitle> <span style={{ display: 'inline-block' }}>design system</span>\n        </h1>\n\n        <hr className={classes.divider} />\n\n        <VFlow vSpacing={3}>\n          <VFlow>\n            <h2 className={classes.subtitle}>Welcome to bold, bridge’s open source design system</h2>\n\n            <Button\n              render={renderButtonGettingStarted}\n              kind='primary'\n              skin='outline'\n              size='medium'\n              style={{ textDecoration: 'none' }}\n            >\n              <Icon icon='rocket' style={{ marginRight: '0.5rem' }} />\n              Getting started\n            </Button>\n          </VFlow>\n\n          <Grid wrap>\n            <Cell xs={12} md={4}>\n              <HFlow alignItems='center' hSpacing={0.5}>\n                <Icon icon='arrowRight' fill='primary' />\n                <h3 className={classes.infoTitle}>Accessible</h3>\n              </HFlow>\n              <Text component='p' style={classes.info}>\n                Bold components were built following the specifications of WCAG AA level, so you can build inclusive\n                digital products to enhance user experience.\n              </Text>\n            </Cell>\n            <Cell xs={12} md={4}>\n              <HFlow alignItems='center' hSpacing={0.5}>\n                <Icon icon='arrowRight' fill='primary' />\n                <h3 className={classes.infoTitle}>Open source</h3>\n              </HFlow>\n              <Text component='p' style={classes.info}>\n                Bold is an open source project, so feel free to contribute, open issues if you find any bugs or\n                implement new features. Find more information on GitHub.\n              </Text>\n            </Cell>\n            <Cell xs={12} md={4}>\n              <HFlow alignItems='center' hSpacing={0.5}>\n                <Icon icon='arrowRight' fill='primary' />\n                <h3 className={classes.infoTitle}>Customizable</h3>\n              </HFlow>\n              <Text component='p' style={classes.info}>\n                By default, Bold exports light and dark themes, but you can create a custom theme and use any primary\n                palette that fits your project.\n              </Text>\n            </Cell>\n          </Grid>\n        </VFlow>\n      </div>\n    </div>\n  )\n}\n\nfunction AnimatedTitle(props: TextProps) {\n  const shine = keyframes({\n    to: {\n      backgroundPosition: '200% center',\n    },\n  })\n  const { classes } = useStyles(createStyles, shine)\n\n  return <Text style={classes.animatedTitle} {...props} />\n}\n\nconst createStyles = (theme: Theme, shine = '') => ({\n  wrapper: {\n    background: theme.pallete.surface.main,\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  } as React.CSSProperties,\n  container: {\n    padding: '48px 80px',\n    maxWidth: 1056,\n    [theme.breakpoints.down('sm')]: {\n      padding: 40,\n    },\n  } as React.CSSProperties,\n  title: {\n    fontWeight: 'normal',\n    fontSize: 56,\n    lineHeight: '108px',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: 40,\n      lineHeight: '72px',\n    },\n  } as React.CSSProperties,\n  subtitle: {\n    fontSize: 24,\n  } as React.CSSProperties,\n  animatedTitle: {\n    fontSize: 132,\n    lineHeight: 1,\n    fontWeight: 'bold',\n    background: 'linear-gradient(80deg, #007AF0 20%, #00B5FF 40%, #00D2F4 60%, #007AF0 80%)',\n    backgroundClip: 'text',\n    textFillColor: 'transparent',\n    WebkitTextFillColor: 'transparent',\n    WebkitBackgroundClip: 'text',\n    backgroundSize: '200% auto',\n    animation: `${shine} 2s linear infinite`,\n  } as React.CSSProperties,\n  divider: {\n    width: 100,\n    marginBottom: '4rem',\n    marginTop: '2rem',\n  },\n  info: {\n    marginLeft: 32,\n    marginTop: 8,\n    fontSize: '1rem',\n  },\n  infoTitle: {\n    fontSize: '1.5rem',\n  },\n})\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
