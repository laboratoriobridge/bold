{"version":3,"sources":["webpack:///./src/components/mdx/MDXPageLayout.tsx","webpack:///./src/pages/design-guidelines/color/usage.mdx","webpack:///./src/components/TabLinks.tsx"],"names":["MDXPageLayout","children","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","items","title","href","parentName","isMDXComponent","TabLinks","classes","useStyles","createStyles","intl","useIntl","isActive","item","location","pathname","locale","className","tabs","map","key","component","LocaleLink","to","style","active","theme","marginTop","marginBottom","boxShadow"],"mappings":"8FAAA,qCAQeA,IAJR,YAAqC,IAAZC,EAAY,EAAZA,SAC9B,OAAO,kBAAC,IAAD,KAAaA,K,gMCETC,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,SACN,MAAS,CACP,SAAY,aAHhB,UAMA,YAAC,IAAD,CAAUC,MAAO,CAAC,CAChBC,MAAO,UACPC,KAAM,4BACL,CACDD,MAAO,QACPC,KAAM,mCACJH,QAAQ,aACZ,kNAEA,kBACE,GAAM,cACN,MAAS,CACP,SAAY,aAHhB,eAMA,6MAEA,qBAAG,mBAAKI,WAAW,IACf,IAAO,+BACP,IAAO,4DAEX,kBACE,GAAM,gBACN,MAAS,CACP,SAAY,aAHhB,iBAMA,2YAIA,qBAAG,mBAAKA,WAAW,IACf,IAAO,4BACP,IAAO,2BAEX,kBACE,GAAM,UACN,MAAS,CACP,SAAY,aAHhB,WAMA,iSAGA,qBAAG,mBAAKA,WAAW,IACf,IAAO,0BACP,IAAO,0BAMfP,EAAWQ,gBAAiB,G,kCCpF5B,+FAaaC,EAAW,SAACP,GAAyB,IACxCE,EAAUF,EAAVE,MACAM,EAAYC,aAAUC,GAAtBF,QAEFG,EAAOC,oBACPC,EAAW,SAACC,GAAD,MACK,oBAAbC,WACNA,SAASC,WAAaF,EAAKV,MAAQW,SAASC,WAAT,IAA0BL,EAAKM,OAASH,EAAKV,OAEnF,OACE,yBAAKc,UAAWV,EAAQW,MACtB,kBAAC,IAAD,KACGjB,EAAMkB,KAAI,SAAAN,GAAI,OACb,kBAAC,IAAD,CAASO,IAAKP,EAAKV,KAAMkB,UAAWC,IAAYC,GAAIV,EAAKV,KAAMqB,MAAOjB,EAAQM,KAAMY,OAAQb,EAASC,IAClGA,EAAKX,aAQZO,EAAe,SAACiB,GAAD,MAAmB,CACtCR,KAAM,CACJS,UAAW,sBACXC,aAAc,QAEhBf,KAAM,CACJ,UAAW,CACTgB,UAAW","file":"component---src-pages-design-guidelines-color-usage-mdx-f2f01c7dcc5b189f81ed.js","sourcesContent":["import React from 'react'\n\nimport { PageLayout } from '../PageLayout'\n\nexport function MDXPageLayout({ children }) {\n  return <PageLayout>{children}</PageLayout>\n}\n\nexport default MDXPageLayout\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/lj/workspace/bold/site/src/components/mdx/MDXPageLayout\";\nimport { TabLinks } from '../../../components/TabLinks';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"colors\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Colors`}</h1>\n    <TabLinks items={[{\n      title: 'Pallete',\n      href: '/design-guidelines/color'\n    }, {\n      title: 'Usage',\n      href: '/design-guidelines/color/usage'\n    }]} mdxType=\"TabLinks\" />\n    <p>{`Our color palettes were built with a focus on accessibility and ease of use. Through them, it is possible to\nbuild accessible components and even dark UI by inverting the color levels.`}</p>\n    <h2 {...{\n      \"id\": \"consistency\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Consistency`}</h2>\n    <p>{`It is possible to change the primary color of the components by keeping the contrast proportion because all\nthe scales were built with similar amounts of brightness on each level.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/image/color-consistency.png\",\n        \"alt\": \"Color consistency on buttons: Same level of brightness\"\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"accessibility\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Accessibility`}</h2>\n    <p>{`The scales are divided into 10 levels: the colors from 10 to 40 have a contrasting warranty of > 4.5:1 in\nwhite backgrounds, while the ones from 70 to 100 have the same warranty in dark backgrounds. In this way, our\ncomponents respect the adequate contrast proportions for textual and interactive elements and non-interactive\nelements, in accordance with any palette.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/image/color-contrast.png\",\n        \"alt\": \"Color contrast ratios\"\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"dark-ui\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Dark UI`}</h2>\n    <p>{`All the palettes were built to work in an inverted way. In order to apply the dark mode just invert the colors\nfrom the center of the scale, what is 50 becomes 60, what is 40 becomes 70, and so it goes. For a practical\nexample, just click the lamp on our header!`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/image/color-darkui.png\",\n        \"alt\": \"Inverted gray scale\"\n      }}></img></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { TabItem, Tabs, Theme, useStyles } from 'bold-ui'\nimport { useIntl } from 'gatsby-plugin-intl'\nimport React, { CSSProperties } from 'react'\n\nimport { LocaleLink } from './LocaleLink'\n\nexport interface TabLinksProps {\n  items: Array<{\n    title: string\n    href: string\n  }>\n}\n\nexport const TabLinks = (props: TabLinksProps) => {\n  const { items } = props\n  const { classes } = useStyles(createStyles)\n\n  const intl = useIntl()\n  const isActive = (item: TabLinksProps['items'][0]) =>\n    typeof location !== 'undefined' &&\n    (location.pathname === item.href || location.pathname === `/${intl.locale}${item.href}`)\n\n  return (\n    <div className={classes.tabs}>\n      <Tabs>\n        {items.map(item => (\n          <TabItem key={item.href} component={LocaleLink} to={item.href} style={classes.item} active={isActive(item)}>\n            {item.title}\n          </TabItem>\n        ))}\n      </Tabs>\n    </div>\n  )\n}\n\nconst createStyles = (theme: Theme) => ({\n  tabs: {\n    marginTop: '-0.75rem !important',\n    marginBottom: '2rem',\n  } as CSSProperties,\n  item: {\n    'a:focus': {\n      boxShadow: 'none !important',\n    },\n  } as CSSProperties,\n})\n"],"sourceRoot":""}