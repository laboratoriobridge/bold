{"version":3,"sources":["webpack:///./src/components/mdx/MDXPageLayout.tsx","webpack:///./src/pages/components/cards/index.mdx"],"names":["MDXPageLayout","children","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","width","href","isMDXComponent"],"mappings":"8FAAA,qCAQeA,IAJR,YAAqC,IAAZC,EAAY,EAAZA,SAC9B,OAAO,kBAAC,IAAD,KAAaA,K,kLCCTC,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,QACN,MAAS,CACP,SAAY,aAHhB,SAMA,+PACA,kBACE,GAAM,iBACN,MAAS,CACP,SAAY,aAHhB,kBAMA,sBACE,kBAAIC,WAAW,MAAf,0VAA+W,iBAAGA,WAAW,KACzX,KAAQ,qBADmW,SAA/W,6BAGA,kBAAIA,WAAW,MAAf,wRAEF,kBACE,GAAM,aACN,MAAS,CACP,SAAY,aAHhB,cAMA,yBACF,yBACE,sBACE,kBAAIC,MAAO,KAAX,aACA,6IAKF,sBACE,mCACA,6IAKF,sBACE,gCACA,gEACyC,iBAAGC,KAAK,wBAAR,YADzC,iFAKF,sBACE,oCACA,gIAC0G,IACxG,iBAAGA,KAAK,yBAAR,aAFF,oEAWNN,EAAWO,gBAAiB","file":"component---src-pages-components-cards-index-mdx-e2d0fe1edca4c77b4103.js","sourcesContent":["import React from 'react'\n\nimport { PageLayout } from '../PageLayout'\n\nexport function MDXPageLayout({ children }) {\n  return <PageLayout>{children}</PageLayout>\n}\n\nexport default MDXPageLayout\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/lj/workspace/bold/site/src/components/mdx/MDXPageLayout\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"cards\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Cards`}</h1>\n    <p>{`A card is a UI design pattern that groups related information in a flexible-size container. A card is a container for a few short, related pieces of information. Cards don't have a style pattern for texts and included information.`}</p>\n    <h2 {...{\n      \"id\": \"best-practices\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Best practices`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Card layouts are less scannable than lists. A standard vertical list view is more scannable than cards because the positioning of the individual elements is fixed in size and more predictable for the eye. Thus, cards are not appropriate when users search for a specific item from a list or look for a particular piece of content. Instead, use `}<a parentName=\"li\" {...{\n          \"href\": \"/components/table\"\n        }}>{`Table`}</a>{` for better organization.`}</li>\n      <li parentName=\"ul\">{`Cards are an excellent choice for dashboard applications that display a variety of content types at the same time on the same page. In such situations, the card metaphor can help create more obvious differences between items, and each card can accommodate different elements.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"card-types\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Card types`}</h2>\n    <table>\n  <tbody>\n    <tr>\n      <th width={160}>Read-only</th>\n      <td>\n        Use to communicate something to the user. A read-only card can contain buttons like CTA (Call to action) or\n        links.\n      </td>\n    </tr>\n    <tr>\n      <th>Clickable</th>\n      <td>\n        Clickable cards can be used as links, to redirect the user to other pages. Don't use CTA (Call to action)\n        buttons.\n      </td>\n    </tr>\n    <tr>\n      <th>Toggle</th>\n      <td>\n        Toggle cards have the same behavior as <a href='/components/checkbox'>Checkbox</a>. Use toggle card when the\n        selection needs more information than a checkbox.\n      </td>\n    </tr>\n    <tr>\n      <th>Expandable</th>\n      <td>\n        Expandable cards are useful to show or hide a large amount of information and have the same behavior as{' '}\n        <a href='/components/accordion'>Accordion</a>. CTA buttons can only be used if it has its own click area.\n      </td>\n    </tr>\n  </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}