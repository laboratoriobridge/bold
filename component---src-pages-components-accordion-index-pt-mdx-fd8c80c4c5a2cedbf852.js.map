{"version":3,"sources":["webpack:///./src/pages/components/accordion/index.pt.mdx","webpack:///./src/components/mdx/MDXPageLayout.tsx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","MDXPageLayout","children"],"mappings":"6OAMaA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,YACN,MAAS,CACP,SAAY,aAHhB,aAMA,0BAAS,kBAAIC,WAAW,KAAf,aAAT,uWAEA,kBACE,GAAM,gBACN,MAAS,CACP,SAAY,aAHhB,iBAMA,sBACE,kBAAIA,WAAW,MAAf,iBAAsC,kBAAIA,WAAW,MAAf,aAAtC,0LACA,kBAAIA,WAAW,MAAf,oGACA,kBAAIA,WAAW,MAAf,iHAAsI,kBAAIA,WAAW,MAAf,aAAtI,wDAAqO,kBAAIA,WAAW,MAAf,aAArO,uEAEF,qBAAG,sBAAQA,WAAW,KAAnB,6EAKPJ,EAAWK,gBAAiB,G,oCChD5B,qCAQeC,IAJR,YAAqC,IAAZC,EAAY,EAAZA,SAC9B,OAAO,kBAAC,IAAD,KAAaA","file":"component---src-pages-components-accordion-index-pt-mdx-fd8c80c4c5a2cedbf852.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/lj/workspace/bold/site/src/components/mdx/MDXPageLayout\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"accordion\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Accordion`}</h1>\n    <p>{`O `}<em parentName=\"p\">{`accordion`}</em>{` é um componente clicável que revela um conteúdo associado oculto. É uma das formas de dar controle ao usuário do que ele quer ler e o que prefere ignorar.\nQuando minimizado, diminui a rolagem da página e fornece uma visualização rápida do conteúdo da tela, permitindo que o usuário forme um rápido modelo mental das informações disponíveis na interface.`}</p>\n    <h2 {...{\n      \"id\": \"boas-praticas\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Boas práticas`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Não utilize o `}<em parentName=\"li\">{`accordion`}</em>{` se a informação oculta for necessária e se o usuário precisar expandir muitos itens para encontrar a informação desejada. Neste caso, considere deixar todas as informações visíveis;`}</li>\n      <li parentName=\"ul\">{`Considere otimizar as páginas para impressão, de modo a apresentar todas as informações ocultas;`}</li>\n      <li parentName=\"ul\">{`Em tabelas, nas situações que a lista apresenta somente alguns itens expansíveis, os itens que não utilizam o `}<em parentName=\"li\">{`accordion`}</em>{` devem apresentar o mesmo recuo dos demais. Quando o `}<em parentName=\"li\">{`accordion`}</em>{` é aplicado em cards, não é necessário manter o mesmo alinhamento.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Este componente ainda não foi implementado como um componente em React.`}</strong></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react'\n\nimport { PageLayout } from '../PageLayout'\n\nexport function MDXPageLayout({ children }) {\n  return <PageLayout>{children}</PageLayout>\n}\n\nexport default MDXPageLayout\n"],"sourceRoot":""}